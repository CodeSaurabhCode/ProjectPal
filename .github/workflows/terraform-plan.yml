name: 'Terraform Plan'

on:
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-plan.yml'

permissions:
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}"
        continue-on-error: true

      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          FMT_OUTCOME: ${{ steps.fmt.outcome }}
          INIT_OUTCOME: ${{ steps.init.outcome }}
          VALIDATE_OUTCOME: ${{ steps.validate.outcome }}
          VALIDATE_OUTPUT: ${{ steps.validate.outputs.stdout }}
          PLAN_OUTCOME: ${{ steps.plan.outcome }}
          PLAN_OUTPUT: ${{ steps.plan.outputs.stdout }}
          ACTOR: ${{ github.actor }}
          EVENT_NAME: ${{ github.event_name }}
          WORKFLOW: ${{ github.workflow }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = [
              `#### Terraform Format and Style üñå ${process.env.FMT_OUTCOME}`,
              `#### Terraform Initialization ‚öôÔ∏è ${process.env.INIT_OUTCOME}`,
              `#### Terraform Validation ü§ñ ${process.env.VALIDATE_OUTCOME}`,
              '<details><summary>Validation Output</summary>',
              '',
              '```',
              process.env.VALIDATE_OUTPUT,
              '```',
              '',
              '</details>',
              '',
              `#### Terraform Plan üìñ ${process.env.PLAN_OUTCOME}`,
              '',
              '<details><summary>Show Plan</summary>',
              '',
              '```terraform',
              process.env.PLAN_OUTPUT,
              '```',
              '',
              '</details>',
              '',
              `*Pusher: @${process.env.ACTOR}, Action: ${process.env.EVENT_NAME}, Workflow: ${process.env.WORKFLOW}*`
            ].join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
